{"version":3,"sources":["components/checkbox.js","components/listtodoitem.js","components/editform.js","components/addform.js","containers/filterdropdown.js","services/listservice.js","containers/todolist.js","pages/App.js","index.js"],"names":["CheckBox","props","type","ListTodoItem","item","className","checked","completed","onChange","handleComplete","content","onClick","handleEdit","handleDelete","EditForm","onSubmit","event","preventDefault","updateItem","value","target","handleItemChange","AddForm","addNewItem","handleNewItemChange","FilterDropDown","currFilter","filtOptions","handleFilterChange","useState","dropdownOpen","setDropdownOpen","handleClick","id","Dropdown","isOpen","toggle","prevState","DropdownToggle","caret","DropdownMenu","map","option","index","DropdownItem","key","baseUrl","axios","get","then","response","data","newObject","post","put","delete","ToDoList","editItem","edit","setState","list","state","delItem","ListService","filter","catch","error","comItem","returnedItem","newItem","emptyItem","concat","returnedList","bind","filterList","this","React","Component","App","href","ReactDOM","render","document","getElementById"],"mappings":"yPAOeA,EAJE,SAAAC,GAAK,OAClB,yCAAOC,KAAK,YAAeD,KC6BhBE,EA5BM,SAACF,GAGpB,IAAMG,EAAOH,EAAMG,KAcnB,OACE,wBAAIC,UAAU,gBACZ,kBAAC,EAAD,CAAUC,QAASF,EAAKG,UAAWC,SANhB,WACrBP,EAAMQ,eAAeL,MAIrB,WAEOA,EAAKM,SACV,6BACA,4BAAQL,UAAU,aAAaM,QAjBhB,WACjBV,EAAMW,WAAWR,KAgBf,QACA,4BAAQC,UAAU,SAASM,QAdV,WACnBV,EAAMY,aAAaT,KAajB,YCASU,EAvBE,SAACb,GAEhB,IAAMG,EAAOH,EAAMG,KAYnB,OACE,wBAAIC,UAAU,gBACd,0BAAOU,SAPY,SAACC,GACpBA,EAAMC,iBACNhB,EAAMiB,WAAWd,KAMf,2BAAOe,MAAOf,EAAKM,QAASF,SAbX,SAACQ,GACpBZ,EAAKM,QAAUM,EAAMI,OAAOD,MAC5BlB,EAAMoB,iBAAiBjB,MAYrB,4BAAQC,UAAU,SAASH,KAAK,UAAhC,aCKSoB,EAxBC,SAACrB,GAEb,IAAMG,EAAOH,EAAMG,KAanB,OACE,4BACA,0BAAMW,SARa,SAACC,GACpBA,EAAMC,iBACNhB,EAAMsB,eAOJ,2BAAOJ,MAAOf,EAAKM,QAASF,SAfX,SAACQ,GACpBZ,EAAKM,QAAUM,EAAMI,OAAOD,MAE5BlB,EAAMuB,oBAAoBpB,MAaxB,4BAAQC,UAAU,SAASH,KAAK,UAAhC,U,wCCaOuB,EA/BQ,SAAAxB,GAAU,IACtByB,EAA+CzB,EAA/CyB,WAAYC,EAAmC1B,EAAnC0B,YAAaC,EAAsB3B,EAAtB2B,mBADJ,EAGYC,oBAAS,GAHrB,mBAGrBC,EAHqB,KAGPC,EAHO,KAOtBC,EAAc,SAAChB,GACjBY,EAAmBZ,EAAMI,OAAOa,KAGpC,OACE,kBAACC,EAAA,EAAD,CAAUC,OAAQL,EAAcM,OAPnB,kBAAML,GAAgB,SAAAM,GAAS,OAAKA,OAQ/C,kBAACC,EAAA,EAAD,CAAgBC,OAAK,GAChBb,GAEL,kBAACc,EAAA,EAAD,KACKb,EAAYc,KAAI,SAACC,EAAQC,GAAT,OACb,kBAACC,EAAA,EAAD,CACEC,IAAMF,EACNV,GAAIU,EACJhC,QAASqB,GAERU,S,iBCpBbI,EAAU,gBA8BD,EA3BA,WAGX,OAFgBC,IAAMC,IAAIF,GAEXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAwB9B,EApBA,SAAAC,GAGX,OAFiBL,IAAMM,KAAKP,EAASM,GAEtBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAiB9B,EAbA,SAAClB,EAAImB,GAGhB,OAFgBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBb,GAAMmB,GAE/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAU9B,EANI,SAAAlB,GAGf,OAFgBc,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2Bb,IAE5BgB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCuL9BK,E,kDArMb,WAAYvD,GAAQ,IAAD,uBACjB,cAAMA,IA+CRW,WAAa,SAAC6C,GACZA,EAASC,MAAO,EAChB,EAAKC,SAAS,CACZC,KAAK,EAAKC,MAAMD,KAAKnB,KAAK,SAAArC,GAAI,OAAIA,EAAK6B,KAAKwB,EAASxB,GAAKwB,EAAWrD,QAnDtD,EAuDnBS,aAAe,SAACiD,GAEdC,EACcD,EAAQ7B,IACnBgB,MAAK,SAAAC,GACJ,EAAKS,SAAS,CACZC,KAAM,EAAKC,MAAMD,KAAKI,QAAO,SAAA5D,GAAI,OAAIA,EAAK6B,KAAO6B,EAAQ7B,WAG5DgC,OAAM,SAAAC,GACL,MAAMA,EAAMhB,SAASC,SAjER,EAuEnB1C,eAAiB,SAAC0D,GAEhBA,EAAQ5D,WAAa4D,EAAQ5D,UAC7BwD,EACUI,EAAQlC,GAAIkC,GACnBlB,MAAK,SAAAmB,GACJ,EAAKT,SAAS,CACZC,KAAM,EAAKC,MAAMD,KAAKnB,KAAI,SAAArC,GAAI,OAAIA,EAAK6B,KAAOkC,EAAQlC,GAAKmC,EAAehE,WA9E/D,EAoFnBiB,iBAAmB,SAACgD,GAElB,EAAKV,SAAS,CACZC,KAAM,EAAKC,MAAMD,KAAKnB,KAAI,SAAArC,GAAI,OAAIA,EAAK6B,KAAOoC,EAAQpC,GAAKoC,EAAUjE,QAvFtD,EA0GnBoB,oBAAsB,SAACpB,GAErB,EAAKuD,SAAS,CAACU,QAASjE,KA5GP,EAgHnBmB,WAAa,WAEX,IAAM+C,EAAY,CAChB5D,QAAS,GACTH,WAAW,EACXmD,MAAM,GAGRK,EACU,EAAKF,MAAMQ,SAClBpB,MAAK,SAAAmB,GACJ,EAAKT,SAAS,CACZC,KAAM,EAAKC,MAAMD,KAAKW,OAAOH,GAC7BC,QAASC,QA7HE,EAoInB1C,mBAAqB,SAACe,GACpB,EAAKgB,SAAS,CAACjC,WAAY,EAAKC,YAAYgB,MAjI5C,EAAKhB,YAAc,CAAC,MAAO,YAAa,WAJvB,OAYjB,EAAKkC,MAAQ,CACXD,KAAK,GACLS,QAPmB,CAAC3D,QAAS,GAC7BH,WAAW,EACXmD,MAAM,GAMNhC,WAAY,EAAKC,YAAY,IAG/BoC,IAECd,MAAM,SAAAuB,GACL,EAAKb,SAAS,CAACC,KAAKY,OAErBP,OAAO,SAAAC,GACN,MAAMA,EAAMhB,SAASC,QAIvB,EAAKvC,WAAa,EAAKA,WAAW6D,KAAhB,gBAClB,EAAK5D,aAAe,EAAKA,aAAa4D,KAAlB,gBAGpB,EAAKhE,eAAiB,EAAKA,eAAegE,KAApB,gBAGtB,EAAKvD,WAAa,EAAKA,WAAWuD,KAAhB,gBAClB,EAAKpD,iBAAmB,EAAKA,iBAAiBoD,KAAtB,gBAIxB,EAAKjD,oBAAsB,EAAKA,oBAAoBiD,KAAzB,gBAC3B,EAAKlD,WAAa,EAAKA,WAAWkD,KAAhB,gBAGlB,EAAK7C,mBAAqB,EAAKA,mBAAmB6C,KAAxB,gBA5CT,E,uDA4FRJ,GAAS,IAAD,OACjBA,EAAQX,MAAO,EAEfK,EACUM,EAAQpC,GAAIoC,GACnBpB,MAAK,SAAAmB,GACJ,EAAKT,SAAS,CACZC,KAAM,EAAKC,MAAMD,KAAKnB,KAAI,SAAArC,GAAI,OAAIA,EAAK6B,KAAOoC,EAAQpC,GAAKmC,EAAehE,Y,+BAqCvE,IAAD,OAGFsE,EAAaC,KAAKd,MAAMD,KAAKI,QAAO,SAAA5D,GACxC,MAA2B,QAAxB,EAAKyD,MAAMnC,WACJtB,EAEsB,cAAxB,EAAKyD,MAAMnC,WACVtB,EAAKG,WAGJH,EAAKG,aAKjB,OACE,6BAEE,kBAAC,EAAD,CACEmB,WAAYiD,KAAKd,MAAMnC,WACvBC,YAAagD,KAAKhD,YAClBC,mBAAoB+C,KAAK/C,qBAE3B,6BACA,4BAEG8C,EAAWjC,KAAK,SAACrC,GAAD,OAGfA,EAAKsD,KAEH,kBAAC,EAAD,CACEb,IAAKzC,EAAK6B,GACV7B,KAAMA,EACNc,WAAY,EAAKA,WACjBG,iBAAkB,EAAKA,mBAIzB,kBAAC,EAAD,CACEwB,IAAKzC,EAAK6B,GACV7B,KAAMA,EACNQ,WAAY,EAAKA,WACjBC,aAAc,EAAKA,aACnBJ,eAAgB,EAAKA,qBAK5B,kBAAC,EAAD,CACCL,KAAMuE,KAAKd,MAAMQ,QACjB7C,oBAAqBmD,KAAKnD,oBAC1BD,WAAYoD,KAAKpD,kB,GA/LJqD,IAAMC,WCEdC,MAff,WAEE,OACE,6BACE,0CACA,6CACA,uBAAGC,KAAK,6CAAR,oBAIA,kBAAC,EAAD,Q,MCTNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d10ec8bd.chunk.js","sourcesContent":["import React from 'react'\n\n//simple check box\nconst CheckBox = props => (\n    <input type=\"checkbox\" {...props}/>\n)\n  \nexport default CheckBox","import React from 'react'\nimport CheckBox from './checkbox'\n\n//list a todo item\n//props = item, handleEdit, handleDelete, handleComplete\nconst ListTodoItem = (props)  => {\n\n\n  const item = props.item\n\n  const handleEdit = () => {\n    props.handleEdit(item);\n  }\n\n  const handleDelete = () => {\n    props.handleDelete(item);\n  }\n\n  const handleComplete = () => {\n    props.handleComplete(item);\n  }\n  \n  return (\n    <li className=\"todolistitem\">\n      <CheckBox checked={item.completed} onChange={handleComplete}/>\n      {` ${item.content}`}\n      <br></br>\n      <button className=\"editbutton\" onClick={handleEdit}>edit</button>\n      <button className=\"button\" onClick={handleDelete}>delete</button>\n    </li>\n  )\n}\n\nexport default ListTodoItem","import React from 'react'\n\n\n//form for editing items\n//props = item, handleItemChange, updateItem\nconst EditForm = (props)  => {\n\n  const item = props.item  \n\n  const handleChange = (event) => {\n    item.content = event.target.value;\n    props.handleItemChange(item);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.updateItem(item);\n  }\n\n  return (\n    <li className=\"todolistitem\">\n    <form  onSubmit={handleSubmit}>\n      <input value={item.content} onChange={handleChange}/>\n      <button className=\"button\" type=\"submit\">update</button>\n    </form>\n    </li>\n  )\n}\nexport default EditForm","import React from 'react'\n\n//form to add a new item\n//props = item, handleNewItemChange, handleSubmit\nconst AddForm = (props)  => {\n   \n    const item = props.item;\n    const handleChange = (event) => {\n      item.content = event.target.value;\n\n      props.handleNewItemChange(item);\n    }\n\n    const handleSubmit = (event) => {\n      event.preventDefault();\n      props.addNewItem();\n\n    }\n\n    return (\n      <li>\n      <form onSubmit={handleSubmit}>\n        <input value={item.content} onChange={handleChange}/>\n        <button className=\"button\" type=\"submit\">Add</button>\n      </form>\n      </li>\n    )\n}\nexport default AddForm","import React, {useState} from 'react'\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\n//a dropdown menu for setting the filter\n//uses Dropdown from reacstrap\nconst FilterDropDown = props => {\n    const {currFilter, filtOptions, handleFilterChange} = props;\n\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n\n    const toggle = () => setDropdownOpen(prevState => !prevState);\n\n    const handleClick = (event) => {\n        handleFilterChange(event.target.id);\n    }\n\n    return(\n      <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n        <DropdownToggle caret>\n            {currFilter} \n        </DropdownToggle>\n        <DropdownMenu>\n            {filtOptions.map((option, index) =>(\n                <DropdownItem \n                  key ={index}\n                  id={index}\n                  onClick={handleClick}\n                >\n                  {option}\n                </DropdownItem>\n            ))}\n        </DropdownMenu>\n    </Dropdown>\n    )\n}\n\nexport default FilterDropDown\n","/*\nService for communcation to the server\nCame from code wrtten for the \nUniversity of Helsinki Open Fullstack Web Development course\nby: Matt Luukai\n*/\nimport axios from 'axios'\n\nconst baseUrl = '/api/todolist'\n\n//retrieves all items stored\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n\n    return request.then(response => response.data)\n}\n\n//post a new item\nconst create = newObject => {\n    const request =  axios.post(baseUrl, newObject);\n\n    return request.then(response => response.data)\n}\n\n//put a new item \nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\n\n    return request.then(response => response.data)\n}\n\n//delete item\nconst deleteItem = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n\n    return request.then(response => response.data)\n}\n\nexport default {getAll, create, update, deleteItem}","import React from 'react'\n\n//components\nimport ListTodoItem from '../components/listtodoitem'\nimport EditForm from '../components/editform'\nimport AddForm from '../components/addform'\n\n//containers\nimport FilterDropDown from './filterdropdown' \n\n//http services\nimport ListService from '../services/listservice'\n\n/*a class for displaying and controlling the todolist\ncontrols all aspects of the list\nhandles data fetching\ndisplays list\nhandles edit, adding, deleting\n*/\nclass ToDoList extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    //class variable for setting filter\n    this.filtOptions = [\"All\", \"Completed\", \"Pending\"];\n    \n    //empty item used to add new item\n    const emptyNewItem = {content: '', \n      completed: false,\n      edit: false\n    }\n  \n    this.state = {\n      list:[],//list of todo items\n      newItem: emptyNewItem,//empty item for adding a new item\n      currFilter: this.filtOptions[0]//set the current filter to all\n    };\n\n    ListService\n    .getAll()\n    .then( returnedList => {\n      this.setState({list:returnedList})\n    })\n    .catch( error => {\n      throw error.response.data\n    })\n\n    //listtodoitem button handlers\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n\n    //listtodoitem complete item handler\n    this.handleComplete = this.handleComplete.bind(this);\n\n    //edit item handlers\n    this.updateItem = this.updateItem.bind(this);\n    this.handleItemChange = this.handleItemChange.bind(this);\n\n\n    //new item handlers\n    this.handleNewItemChange = this.handleNewItemChange.bind(this);\n    this.addNewItem = this.addNewItem.bind(this);\n\n    //filter handlers\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n  }\n\n  //list todoitem button handlers\n  handleEdit = (editItem) =>{\n    editItem.edit = true;\n    this.setState({\n      list:this.state.list.map( item => item.id===editItem.id ? editItem : item)\n    });\n  }\n\n  handleDelete = (delItem) => {\n    \n    ListService\n      .deleteItem(delItem.id)\n      .then(response =>{\n        this.setState({\n          list: this.state.list.filter(item => item.id !== delItem.id)\n        })\n      })\n      .catch(error =>{\n        throw error.response.data;\n      })\n\n  }\n\n  //listtodoitem item completion handler\n  handleComplete = (comItem) =>{\n\n    comItem.completed = !comItem.completed;\n    ListService\n      .update(comItem.id, comItem)\n      .then(returnedItem =>{\n        this.setState({\n          list: this.state.list.map(item => item.id === comItem.id ? returnedItem : item),\n        })\n      })\n  }\n  \n  //editform item handlers\n  handleItemChange = (newItem) =>{\n\n    this.setState({\n      list: this.state.list.map(item => item.id === newItem.id ? newItem : item)\n    })\n\n  }\n\n  updateItem(newItem){\n    newItem.edit = false;\n\n    ListService\n      .update(newItem.id, newItem)\n      .then(returnedItem =>{\n        this.setState({\n          list: this.state.list.map(item => item.id === newItem.id ? returnedItem : item),\n        })\n      })\n\n  }\n  \n  //addform item handlers\n  handleNewItemChange = (item) => {\n\n    this.setState({newItem: item});\n    \n  }\n  \n  addNewItem = () => {\n\n    const emptyItem = {\n      content: '',\n      completed: false,\n      edit: false\n    }\n    \n    ListService\n      .create(this.state.newItem)\n      .then(returnedItem => {\n        this.setState({\n          list: this.state.list.concat(returnedItem), \n          newItem: emptyItem\n        })\n      })\n  \n  }\n\n  //filterdropdown filter handler\n  handleFilterChange = (index) => {\n    this.setState({currFilter: this.filtOptions[index]})\n  }\n\n  render () {\n    \n    //prefilter list\n    const filterList = this.state.list.filter(item =>{\n      if(this.state.currFilter===\"All\"){\n        return (item)\n      }\n      else if(this.state.currFilter===\"Completed\"){\n        return(item.completed)\n      }\n      else{\n        return(!item.completed)\n      }\n\n    })\n\n    return(\n      <div>\n        \n        <FilterDropDown \n          currFilter={this.state.currFilter}\n          filtOptions={this.filtOptions}\n          handleFilterChange={this.handleFilterChange}\n        />\n        <br></br>\n        <ul >\n          \n          {filterList.map( (item) =>(\n            \n            //only show edit form if flagged\n            item.edit ?\n  \n              <EditForm \n                key={item.id}\n                item={item} \n                updateItem={this.updateItem}\n                handleItemChange={this.handleItemChange}\n              />\n  \n            :\n              <ListTodoItem \n                key={item.id} \n                item={item} \n                handleEdit={this.handleEdit} \n                handleDelete={this.handleDelete}\n                handleComplete={this.handleComplete}\n              />\n          ))}\n  \n        </ul>\n         <AddForm\n          item={this.state.newItem} \n          handleNewItemChange={this.handleNewItemChange}\n          addNewItem={this.addNewItem}\n        />\n      </div>\n\n    )\n  }\n}\n\nexport default ToDoList","import React from 'react';\n\nimport ToDoList from '../containers/todolist'\n\n/*App entry point\ncalls the todolist component*/\nfunction App() {\n\n  return (\n    <div>\n      <h2>To-do List</h2>\n      <p>by: Adam Smith, \n      <a href=\"https://github.com/TheAdamSmith/todo-list\">\n        Code Repository\n      </a>\n      </p>\n      <ToDoList/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}